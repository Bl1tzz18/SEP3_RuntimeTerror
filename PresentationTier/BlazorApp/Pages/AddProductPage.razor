@page "/AddProductPage"
@using HttpClients.ClientInterfaces
@using global::Shared.Models
@using global::Shared.DTOs
@inject IProductService _productService;

<AuthorizeView Roles="admin">
    <Authorized>

        <div class="container1">
            <div class="row">
                <div class="col-md-1">
                    <div id="vLine"></div>
                    <div class="first">
                        <div class="circle" id="1"></div>
                    </div>
                    <div class="mid6">
                        <div class="circle" id="2"></div>
                        <div class="circle" id="3"></div>
                        <div class="circle" id="4"></div>
                        <div class="circle" id="5"></div>
                        <div class="circle" id="6"></div>
                        <div class="circle" id="7"></div>
                    </div>
                    <div class="last">
                        <div class="circle" id="8"></div>
                    </div>
                </div>
                <div class="col-md-11">
                    <div class="row">
                        <div class="col-md-12">
                            <h3>Welcome, admin!</h3>
                            <h6>Add products</h6>
                            <br><br>
                        </div>
                    </div>

                    <div class="row">
                        <div class="col-md-12">
                            <p class="nihuiasebe">Name:</p>
                            <input @bind="_name"/>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-md-12">
                            <p class="nihuiasebe">In stock:</p>
                            <input @bind="_inStock"/>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-md-12">
                            <p class="nihuiasebe">Price: </p>
                            <input @bind="_price"/>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-md-12">
                            <p class="nihuiasebe">Category: </p>
                            <input @bind="_category"/>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-md-12">
                            <p class="nihuiasebe">Image Path:</p>
                            <input @bind="_productImagePath"/>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-md-12">
                            <p class="nihuiasebe">Description :</p>
                            <textarea @bind="_description"></textarea>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-md-3">
                            <br>
                            <button class="btn btn-primary" @onclick="() => onAddProductButton()">Add</button>
                        </div>
                        <div class="col-md-3">
                            <br>
                            <button class="btn btn-primary" @onclick="() => clearInputs()">Clear</button>
                        </div>
                    </div>
                </div>
            </div>
        </div>


    </Authorized>
    <NotAuthorized>
        You are not authorized to view this page
    </NotAuthorized>
</AuthorizeView>


@code {

    [CascadingParameter]
    public Task<AuthenticationState> AuthState { get; set; } = null!;

    private bool isDisable { get; set; } = true;

    private string errormsg = "";

    private int _productId;
    private string _productImagePath;
    private string _name;
    private string _category;
    private string _inStock;
    private string _price;
    private string _description;

    async Task onAddProductButton()
    {
        try
        {
            ProductCreationDTO productToCreate = new ProductCreationDTO
            {
                Name = _name,
                Description = _description,
                ImagePath = _productImagePath,
                InStock = Convert.ToBoolean(_inStock),
                Price = Convert.ToInt32(_price),
                Category = new Category
                {
                    Name = _category
                }
            };

            await _productService.CreateProductAsync(productToCreate);
        }
        catch (Exception e)
        {
            Console.WriteLine(e);
            errormsg = e.Message;
        }
    }

    void clearInputs()
    {
        _name = "";
        _price = "";
        _inStock = "";
        _description = "";
        _category = "";
        _productImagePath = "";
    }

}